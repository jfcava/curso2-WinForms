<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnInicio.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>